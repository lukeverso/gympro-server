// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
     provider = "prisma-client-js"
}

generator erd {
     provider = "prisma-erd-generator"
}

datasource db {
     provider = "sqlite"
     url      = env("DATABASE_URL")
}

model Student {
     id        String  @id @default(uuid())
     name      String
     username  String  @unique
     email     String? @unique
     password  String
     birthdate String
     telephone String?

     addressId  String?
     teacherId  String?
     measuresId String?

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt

     address  Address?  @relation(fields: [addressId], references: [id], onDelete: Cascade)
     teacher  Teacher?  @relation(fields: [teacherId], references: [id])
     measures Measures? @relation(fields: [measuresId], references: [id], onDelete: Cascade)

     exercises Exercise[]
}

model Teacher {
     id        String  @id @default(uuid())
     name      String
     username  String  @unique
     email     String? @unique
     password  String
     birthdate String
     telephone String?

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt

     students Student[]
}

model Address {
     id         String  @id @default(uuid())
     studentId  String  @unique
     street     String
     number     String
     complement String?
     code       String
     city       String
     country    String

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt

     student Student[]
}

model Measures {
     id        String  @id @default(uuid())
     studentId String  @unique
     height    String?
     weight    String?
     bmi       String?
     wingspan  String?
     waist     String?
     hip       String?
     arm       String?
     thigh     String?
     bodyFat   String?

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt

     student Student[]
}

model Exercise {
     id          String  @id @default(uuid())
     studentId   String  @unique
     objective   String
     startDate   String
     endDate     String
     annotations String?
     active      Boolean

     exercises ExerciseItem[]

     student Student @relation(fields: [studentId], references: [id])

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt
}

model ExerciseItem {
     id         String @id @default(uuid())
     exerciseId String
     type       String
     list       String

     exercise Exercise @relation(fields: [exerciseId], references: [id])

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt
}
