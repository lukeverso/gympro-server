generator client {
     provider = "prisma-client-js"
}

datasource db {
     provider = "sqlite"
     // provider = "postgresql"
     url      = env("DATABASE_URL")
}

model Students {
     id        String  @id @default(uuid())
     name      String
     email     String  @unique
     password  String
     birthdate String
     telephone String?
     status    Boolean
     picture   String?

     code       String
     street     String
     number     String
     complement String?
     district   String
     city       String
     state      String

     teacherId  String?
     measuresId String?

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt

     teacher Teachers? @relation(fields: [teacherId], references: [id])

     measures       Measures[]
     sheets         Sheets[]
     medicalHistory MedicalHistory[]
     notifications  Notifications[]
}

model Teachers {
     id        String  @id @default(uuid())
     name      String
     email     String  @unique
     password  String
     birthdate String
     telephone String?
     status    Boolean
     picture   String?

     code       String
     street     String
     number     String
     complement String?
     district   String
     city       String
     state      String

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt

     students      Students[]
     notifications Notifications[]
}

model Notifications {
     id String @id @default(uuid())

     title    String
     content  String
     expanded Boolean @default(false)

     teacherId String

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt

     teacher    Teachers   @relation(fields: [teacherId], references: [id])
     students   Students[]
}

model Measures {
     id         String  @id @default(uuid())
     studentsId String?

     height    String?
     weight    String?
     bmi       String?
     chest     String?
     wingspan  String?
     waist     String?
     hip       String?
     arm       String?
     thigh     String?
     calf      String?
     shoulders String?

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt

     student Students? @relation(fields: [studentsId], references: [id])
}

model Sheets {
     id          String  @id @default(uuid())
     studentsId  String
     annotations String?
     objective   String
     startDate   String
     endDate     String
     active      Boolean

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt

     workouts Workouts[]
     student  Students   @relation(fields: [studentsId], references: [id])
}

model Workouts {
     id       String @id @default(uuid())
     sheetsId String

     type   String
     focus  String
     active Boolean

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt

     exercises Exercises[]

     sheet Sheets @relation(fields: [sheetsId], references: [id])
}

model Exercises {
     id         String @id @default(uuid())
     workoutsId String

     name        String
     series      String
     repetitions String
     restTime    String
     weight      String?
     annotations String?

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt

     Workouts Workouts @relation(fields: [workoutsId], references: [id])
}

model VerificationCodes {
     id String @id @default(uuid())

     email String @unique
     code  String

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt
}

model MedicalHistory {
     id         String @id @default(uuid())
     studentsId String

     surgicalHistory     Boolean
     oncologicalHistory  Boolean
     hypertension        Boolean
     hypotension         Boolean
     diabetes            Boolean
     epilepsy            Boolean
     smoker              Boolean
     drinker             Boolean
     stressTest          Boolean
     sleepHours          Int
     lifeStyle           Boolean
     timeWithoutTraining Int

     heartProblem           Boolean
     chestPain              Boolean
     chestPainLastMonth     Boolean
     imbalance              Boolean
     boneJointIssue         Boolean
     medication             Boolean
     reasonForNotExercising String

     neckPain     Boolean
     shoulderPain Boolean
     backPain     Boolean
     wristPain    Boolean
     fingerPain   Boolean
     hipPain      Boolean
     kneePain     Boolean

     filled Boolean @default(false)

     student Students @relation(fields: [studentsId], references: [id])
}
