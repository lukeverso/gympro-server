// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
     provider = "prisma-client-js"
}

generator erd {
     provider = "prisma-erd-generator"
}

datasource db {
     provider = "sqlite"
     url      = env("DATABASE_URL")
}

model User {
     id        String  @id @default(cuid())
     name      String
     username  String  @unique
     email     String? @unique
     password  String
     birthdate String
     telephone String?
     teacherId String?

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt

     Teacher  Teacher?   @relation(fields: [teacherId], references: [id])
     Exercise Exercise[]
     Address  Address[]
     Measures Measures[]
}

model Teacher {
     id        String  @id @default(cuid())
     name      String
     username  String  @unique
     email     String? @unique
     password  String
     birthdate String
     telephone String?

     students User[]

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt
}

model Address {
     id         String  @id @default(cuid())
     userId     String
     street     String
     number     String
     complement String?
     code       String
     city       String
     country    String

     user User @relation(fields: [userId], references: [id])

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt
}

model Measures {
     id       String  @id @default(cuid())
     userId   String
     height   String?
     weight   String?
     bmi      String?
     wingspan String?
     waist    String?
     hip      String?
     arm      String?
     thigh    String?
     bodyFat  String?

     user User @relation(fields: [userId], references: [id])

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt
}

model Exercise {
     id          String  @id @default(cuid())
     userId      String
     objective   String
     startDate   String
     endDate     String
     annotations String?
     active      Boolean

     exercises ExerciseItem[]

     user User @relation(fields: [userId], references: [id])

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt
}

model ExerciseItem {
     id         String @id @default(cuid())
     exerciseId String
     type       String
     list       String

     createdAt DateTime @default(now())
     updatedAt DateTime @updatedAt

     Exercise Exercise @relation(fields: [exerciseId], references: [id])
}
